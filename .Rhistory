#Comentario
mtcars
mtcars
#Para pedir ayuda, me aparece en la ventana de help
?mtcars
?str
datos["Valiant",]
#Comentario
mtcars
datos["Valiant",]
datos["valiant",]
#Variable
datos <- mtcars
str(datos)
datos["Valiant",]
datos[c(4,5,6),]
datos[c(4,5,6),"mpg"]
?aggreegate
?aggregate
?complete.cases()
knitr::opts_chunk$set(echo = TRUE)
plot(hc) #Genera el dendograma
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
library(NbClust) #Para determinar el número de clusters óptimo
library(factoextra) #Para hacer gráficos bonitos de clustering
library(tidyverse)
library(ppclust)
movies <- read.csv("tmdb-movies.csv")
moviesCuanti <- select(movies, popularity, budget, revenue, runtime, vote_average, release_year)
moviesCuantiCompleto <- moviesCuanti[complete.cases(moviesCuanti),]
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(moviesCuantiCompleto,2,var))
for (i in 2:25)
wss[i] <- sum(kmeans(moviesCuantiCompleto, centers=i)$withinss)
plot(1:25, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
km<-kmeans(moviesCuantiCompleto,noClusters,iter.max =100)
movies$grupo<-km$cluster
plotcluster(moviesCuantiCompleto,km$cluster) #grafica la ubicaciÃ³n de los clusters
g1 <- movies[movies$grupo==1,]
summary(g1)
fcm<-cmeans(moviesCuantiCompleto,noClusters)
movies$FCGrupos<-fcm$cluster
movies<-cbind(movies,fcm$membership)
plotcluster(moviesCuantiCompleto, fcm$cluster)
fcm<-cmeans(moviesCuantiCompleto,noClusters)
movies$FCGrupos<-fcm$cluster
movies<-cbind(movies,fcm$membership)
plotcluster(moviesCuantiCompleto, fcm$cluster)
plotcluster(moviesCuantiCompleto,fcm$cluster)
?plotcluster
?plotcluster
plotcluster(moviesCuantiCompleto,fcm$cluster)
plotcluster(movies,fcm$cluster)
moviesCuantiCompleto<-cbind(movies,fcm$membership)
plotcluster(moviesCuantiCompleto,fcm$cluster)
fcm<-cmeans(moviesCuantiCompleto,noClusters)
movies$FCGrupos<-fcm$cluster
moviesCuantiCompleto<-cbind(movies,fcm$membership)
plotcluster(moviesCuantiCompleto,fcm$cluster)
moviesCuantiCompleto <- moviesCuanti[complete.cases(moviesCuanti),]
fcm<-cmeans(moviesCuantiCompleto,noClusters)
movies$FCGrupos<-fcm$cluster
moviesCuantiCompleto<-cbind(movies,fcm$membership)
plotcluster(moviesCuantiCompleto,fcm$cluster)
movies<-cbind(movies,fcm$membership)
plotcluster(movies,fcm$cluster)
install.packages("ppclust")
install.packages("ppclust")
install.packages("ppclust")
knitr::opts_chunk$set(echo = TRUE)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
library(NbClust) #Para determinar el número de clusters óptimo
library(factoextra) #Para hacer gráficos bonitos de clustering
library(tidyverse)
library(ppclust)
movies <- read.csv("tmdb-movies.csv")
moviesCuanti <- select(movies, popularity, budget, revenue, runtime, vote_average, release_year)
moviesCuantiCompleto <- moviesCuanti[complete.cases(moviesCuanti),]
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(moviesCuantiCompleto,2,var))
for (i in 2:25)
wss[i] <- sum(kmeans(moviesCuantiCompleto, centers=i)$withinss)
plot(1:25, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
km<-kmeans(moviesCuantiCompleto,noClusters,iter.max =100)
movies$grupo<-km$cluster
plotcluster(moviesCuantiCompleto,km$cluster) #grafica la ubicaciÃ³n de los clusters
#Clustering jerÃ¡rquico
hc<-hclust(dist(iris[,1:4])) #Genera el clustering jerÃ¡rquico de los datos
library(ppclust)
hc<-hclust(dist(moviesCuantiCompleto)) #Genera el clustering jerÃ¡rquico de los datos
plot(hc) #Genera el dendograma
plot(hc) #Genera el dendograma
rect.hclust(hc,k=noClusters) #Dibuja el corte de los grupos en el grÃ¡fico
groups<-cutree(hc,k=noClusters) #corta el dendograma, determinando el grupo de cada fila
movies$gruposHC<-groups
setwd("C:/Users/josue/Desktop/HT2-Clustering-MineriaDeDatos")
knitr::opts_chunk$set(echo = TRUE)
km<-kmeans(moviesCuantiCompleto,noClusters,iter.max =100)
moviesCuantiCompleto$grupo<-km$cluster
plotcluster(moviesCuantiCompleto,km$cluster) #grafica la ubicaciÃ³n de los clusters
library(fpc)
library(NbClust)
library(tidyverse)
library(tidyverse)
library(NbClust)
library(fpc)
movies <- read.csv("tmdb-movies.csv")
moviesCuanti <- select(movies, popularity, budget, revenue, runtime, vote_average, release_year)
moviesCuantiCompleto <- moviesCuanti[complete.cases(moviesCuanti),]
km <- kmeans(moviesCuantiCompleto,3,iter.max=10)
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(moviesCuantiCompleto,2,var))
for (i in 2:25)
wss[i] <- sum(kmeans(moviesCuantiCompleto, centers=i)$withinss)
wss[i] <- sum(kmeans(moviesCuantiCompleto, centers=i)$withinss)
plot(1:25, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
km<-kmeans(moviesCuantiCompleto,noClusters,iter.max =100)
moviesCuantiCompleto$grupo<-km$cluster
plotcluster(moviesCuantiCompleto,km$cluster) #grafica la ubicaciÃ³n de los clusters
